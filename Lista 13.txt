Exercicio A:
# A. fim_igual
# Dada uma lista de strings, retorna o número de strings
# com tamanho >= 2 onde o primeiro e o último caracteres são iguais
# Exemplo: ['aba', 'xyz', 'aa', 'x', 'bbb'] retorna 3
def fim_igual(words):
    count = 0
    for s in words:
        if len(s) < 2:
            continue
        if s[0] == s[-1]:
            count += 1
    return count

Exercicio B:
# B. x_antes
# Dada uma lista de strings retorna uma lista onde
# todos os elementos que começam com x ficam sorteados antes 
# Ex.: ['mix', 'xyz', 'apple', 'xanadu', 'aardvark'] retorna
# ['xanadu', 'xyz', 'aardvark', 'apple', 'mix']
# Dica: monte duas listas separadas e junte-as no final
def x_antes(words):
    comX, semX = [], []
    for s in words:
        if s[0] == 'x':
            comX.append(s)
        else: semX.append(s)
    return sorted(comX) + sorted(semX)

Exercicio C:
# C. sort_last
# Dada uma lista de tuplas não vazias retorna uma tupla ordenada
# por ordem crescente do último elemento 
# Exemplo [(1, 7), (1, 3), (3, 4, 5), (2, 2)] retorna
# [(2, 2), (1, 3), (3, 4, 5), (1, 7)]
# Dica: use key=função que você definiu e que retorna o último elemento
def sort_last(tuples):
    return sorted(tuples, key=last)

def last(a): #esta def serve para a letra C
    return a[-1]

